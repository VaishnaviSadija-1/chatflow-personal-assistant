{
  "name": "Personal_Assistant.json",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "40265ee2-b540-4469-a8a7-0b42259d97ef",
      "name": "chat received",
      "webhookId": "8c56af69-c43d-40e0-9453-16dbcc4412ec",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "iXy1Lbe52goqkNE2",
          "name": "WhatsApp OAuth account 6"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('chat received').item.json.messages[0].text.body }}",
        "options": {
          "systemMessage": "You are a resourceful and intelligent virtual assistant. Your responsibilities include handling:\n\na) Calendar events\nb) Email communications\nc) Message-based tasks with precision, clarity, and professionalism.\n\nüìÖ Primary Responsibilities\nüìÜ Calendar Event Management\nA. View Calendar Events\nUse the ‚ÄúGet Events‚Äù tool to retrieve events based on user queries like:\n‚ÄúShow me today‚Äôs events‚Äù or ‚ÄúWhat meetings do I have tomorrow?‚Äù\nPresent events clearly, including:\n\nsql\nCopy\nEdit\nEvent: [Event Title]  \nTime: [Start Time] - [End Time]  \nB. Schedule New Calendar Events\nAsk the user for:\n\nEvent Title\n\nStart and End Time\n\nDescription\n\nThen confirm details before scheduling:\n\nsql\nCopy\nEdit\nEvent: [Event Title]  \nTime: [Start Time] ‚Äì [End Time]  \nC. Get Many Calendar Events\nGet all the events scheduled in the user‚Äôs calendar during a specific time period.\n\nüìß Email Management\nA. Retrieve Emails\nUse the ‚ÄúGET‚Äù tool to fetch emails. Handle queries like:\n\n‚ÄúShow me today‚Äôs emails‚Äù\n\n‚ÄúGet unread emails from this week‚Äù\n\nReturn the 5 most recent unread emails by default.\n\nFormat your response like this:\n\nless\nCopy\nEdit\nEmail 1:  \n- Subject: [Subject]  \n- From: [Sender Name / Email]  \n- Summary: [Brief description]\nB. Send & Reply to Emails\nUse the ‚ÄúSEND‚Äù tool to compose or reply to emails.\n\nGenerate subject and message content using Gemini.\n\nAlways ask for user confirmation before sending.\n\nConfirmation Template:\n\nless\nCopy\nEdit\nüì© When the user requests an email:\n1. You generate a draft.\n2. Respond with:\n\nüìù Email Draft:  \nTo: [To]  \nSubject: [Subject]  \nBody:  \n[Body]  \n  \n‚úÖ Shall I send this email?\n\n3. If the user responds with confirmation (e.g. \"Yes\", \"Send\", \"Go ahead\"):\nüëâ You MUST call the `SEND` tool using the same draft details.\n\n4. Otherwise, wait or cancel.\n\n\n\nüß† Tools Available (Use When Needed)\nCalendar Tool ‚Äì for viewing or creating events\n\nGmail Tool ‚Äì for reading or sending emails\n\nSERP Tool ‚Äì for web summaries\n\nPerplexity Tool ‚Äì for deeper online research"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        820,
        -20
      ],
      "id": "e2e41202-0b8f-4072-bf3a-57af11bc2eee",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "44b5122d-7fe0-4318-95a8-b951992640cc",
              "leftValue": "={{ $('chat received').item.json.messaging_product }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        0
      ],
      "id": "30a44756-dbd2-4eb5-b281-e3563c4ccb61",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1447711-7ce0-4680-9063-f9dbb6070f94",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        0
      ],
      "id": "eec8aea1-a3bb-40f2-8cc5-1263f99e7750",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "description": "call this tool when you got task for calendar, event create, get, delete ,get many or update",
        "workflowId": {
          "__rl": true,
          "value": "GpDWWrlEKN4H9S57",
          "mode": "list",
          "cachedResultName": "Calender_event.json"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        880,
        300
      ],
      "id": "6ed6557e-aefd-4ba3-b9bb-eb92ae723c38",
      "name": "CALENDAR EVENT"
    },
    {
      "parameters": {
        "description": "call this tool when user task related to emails if user ask to send or get the emails use this tool",
        "workflowId": {
          "__rl": true,
          "value": "JNoMZNotfNMsHPwF",
          "mode": "list",
          "cachedResultName": "Email_agent.json"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1080,
        300
      ],
      "id": "98448c28-4690-46a5-b223-141e732deba9",
      "name": "EMAIL EVENT"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        520,
        300
      ],
      "id": "4d4370ae-424e-4e0a-bdac-23441018f3f8",
      "name": "GEMINI",
      "credentials": {
        "googlePalmApi": {
          "id": "Nvr68vKUNTq1i5f6",
          "name": "Google Gemini(PaLM) Api account 4"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "707479222447268",
        "recipientPhoneNumber": "918830617008",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1400,
        -20
      ],
      "id": "9c114951-f567-4412-b33e-d48310c9d5c3",
      "name": "Send message1",
      "webhookId": "3e70ffd1-4868-4110-a745-7623b835be34",
      "credentials": {
        "whatsAppApi": {
          "id": "NQCze5AarDl4iJot",
          "name": "WhatsApp account 7"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('chat received').item.json.metadata.phone_number_id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        700,
        300
      ],
      "id": "3bdea5e5-e883-4f97-bfb4-1b72d5d5c694",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "connections": {
    "chat received": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CALENDAR EVENT": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "EMAIL EVENT": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GEMINI": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9c9647aa-2fd2-4ebe-9b79-2a84c324be7f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3bf809bca3b36b04ac53a6dd78d008bcf9489132f51ad120b2c09d78c8a68d41"
  },
  "id": "VkEDB6rlBrgw27oy",
  "tags": []
}
